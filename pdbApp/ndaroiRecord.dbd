#*************************************************************************
# Copyright (c) 2020 Michael Davidsaver
# EPICS BASE is distributed subject to a Software License Agreement found
# in file LICENSE that is included with this distribution.
#*************************************************************************


menu(menuColor) {
    choice(menuColorGray, "GRAY")
    # ... RGB8 etc.
}

include "menuYesNo.dbd"

recordtype(ndaroi) {
    include "dbCommon.dbd"

    %/* Declare Device Support Entry Table */
    %#include <devSup.h>
    %#include <pv/bitSet.h>
    %#include <pv/pvData.h>
    %#ifdef __cplusplus
    %extern "C" {
    %#endif
    %typedef struct ndaroidset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_ndarray)(struct ndaroiRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} ndaroidset;
    %#define HAS_ndaroidset
    %struct ndaroiPvt;
    %#ifdef __cplusplus
    %}
    %#endif
    field(VAL,DBF_NOACCESS) {
        prompt("Pixel array")
        promptgroup("40 - Input")
        asl(ASL0)
        pp(TRUE)
        special(SPC_DBADDR)
        #extra("::epics::pvData::shared_vector<const void> val")
        extra("::epics::pvData::PVStructurePtr val")
    }
    field(INP,DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(XENA, DBF_MENU){
        prompt("Enable ROI for X dimension")
        interest(2)
        promptgroup("40 - Input")
        menu(menuYesNo)
    }
    field(XMIN, DBF_ULONG){
        prompt("First pixel in X dimension")
        interest(2)
        promptgroup("40 - Input")
    }
    field(XSIZE, DBF_ULONG){
        prompt("Size of ROI in the X dimension")
        interest(2)
        promptgroup("40 - Input")
    }
    field(YENA, DBF_MENU){
        prompt("Enable ROI for Y dimension")
        interest(2)
        promptgroup("40 - Input")
        menu(menuYesNo)
    }
    field(YMIN, DBF_ULONG){
        prompt("First pixel in Y dimension")
        interest(2)
        promptgroup("40 - Input")
    }
    field(YSIZE, DBF_ULONG){
        prompt("Size of ROI in the Y dimension")
        interest(2)
        promptgroup("40 - Input")
    }
    field(ZENA, DBF_MENU){
        prompt("Enable ROI for Y dimension")
        interest(2)
        promptgroup("40 - Input")
        menu(menuYesNo)
    }
    field(ZMIN, DBF_ULONG){
        prompt("First pixel in Z dimension")
        interest(2)
        promptgroup("40 - Input")
    }
    field(ZSIZE, DBF_ULONG){
        prompt("Size of ROI in the Z dimension")
        interest(2)
        promptgroup("40 - Input")
    }
    field(COL, DBF_MENU) {
        prompt("Color Mode")
        interest(3)
        special(SPC_NOMOD)
        menu(menuColor)
    }
    field(ID, DBF_LONG) {
        prompt("Unique ID")
        interest(3)
        special(SPC_NOMOD)
    }
    field(RPVT, DBF_NOACCESS) {
        extra("struct ndaroiPvt *rpvt")
    }
    field(ROOT,DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("::epics::pvData::PVStructurePtr root")
    }
    field(CHG,DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("::epics::pvData::BitSet chg")
    }
    field(VLD,DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("::epics::pvData::BitSet vld")
    }
}

device(ndaroi, CONSTANT, devNDARoiSoft, "Soft Channel")
